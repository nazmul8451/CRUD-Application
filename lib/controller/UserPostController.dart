import 'dart:convert';

import 'package:crud/model/user_post_model.dart';
import 'package:flutter/cupertino.dart';
import 'package:http/http.dart';

class UserPostController extends ChangeNotifier{

  List <PostModel> _post = [];

 List<PostModel> get post =>_post;

  Future<void> fetchPost()async{
    final response = await get(Uri.parse('https://jsonplaceholder.typicode.com/posts'));

    if(response.statusCode == 200){
      print('‚úÖ Success: Data fetched');
      final decodedPost = jsonDecode(response.body) as List;
      _post = decodedPost.map((element)=> PostModel.fromJson(element)).toList();
      /*
      ‡¶è‡¶ñ‡¶® ‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ ‡¶¶‡¶∞‡¶ï‡¶æ‡¶∞: ‡¶è‡¶á Map ‡¶ó‡ßÅ‡¶≤‡¶æ‡¶ï‡ßá Dart object ‡¶è convert ‡¶ï‡¶∞‡¶æ

‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ Model class ‡¶π‡¶≤‡ßã PostModel, ‡¶Ø‡¶æ‡¶∞ ‡¶≠‡ßá‡¶§‡¶∞‡ßá factory PostModel.fromJson() method ‡¶Ü‡¶õ‡ßá‡•§

‡¶Ö‡¶∞‡ßç‡¶•‡¶æ‡ßé,
‡¶Ø‡¶ñ‡¶® ‡¶Ü‡¶Æ‡¶∞‡¶æ ‡¶≤‡¶ø‡¶ñ‡¶ø:

PostModel.fromJson(e)


‡¶§‡¶ñ‡¶® e ‡¶Æ‡¶æ‡¶®‡ßá ‡¶è‡¶ï‡ßá‡¶ï‡¶ü‡¶æ Map, ‡¶Ü‡¶∞ ‡¶∏‡ßá‡¶ü‡¶æ ‡¶•‡ßá‡¶ï‡ßá ‡¶è‡¶ï‡¶ü‡¶æ PostModel object ‡¶§‡ßà‡¶∞‡¶ø ‡¶π‡ßü‡•§

üîπ ‡¶§‡¶æ‡¶π‡¶≤‡ßá .map() ‡¶è‡¶∞ ‡¶ï‡¶æ‡¶ú ‡¶ï‡ßÄ?

decodedPost.map() ‡¶Æ‡¶æ‡¶®‡ßá ‡¶π‡¶≤‡ßã ‚Üí
List ‡¶ü‡¶æ‡¶∞ ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶ü‡¶æ element e ‡¶è‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶è‡¶ï‡¶ü‡¶æ ‡¶ï‡¶æ‡¶ú ‡¶ï‡¶∞‡ßã‡•§

‡¶è‡¶á ‡¶ï‡¶æ‡¶ú‡¶ü‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá PostModel.fromJson(e) ‚Äî
‡¶Æ‡¶æ‡¶®‡ßá ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶ü‡¶æ map ‡¶ï‡ßá model object ‡¶è ‡¶∞‡ßÇ‡¶™‡¶æ‡¶®‡ßç‡¶§‡¶∞ ‡¶ï‡¶∞‡ßã‡•§

‡¶è‡¶∞‡¶™‡¶∞ .toList() ‡¶¶‡¶ø‡¶≤‡ßá
‡¶è‡¶ó‡ßÅ‡¶≤‡ßã ‡¶è‡¶ï‡¶∏‡¶æ‡¶•‡ßá ‡¶è‡¶ï‡¶ü‡¶æ ‡¶®‡¶§‡ßÅ‡¶® List<PostModel> ‡¶è ‡¶™‡¶∞‡¶ø‡¶£‡¶§ ‡¶π‡ßü‡•§

üîπ ‡¶Ö‡¶∞‡ßç‡¶•‡¶æ‡ßé ‡¶∏‡¶Ç‡¶ï‡ßç‡¶∑‡ßá‡¶™‡ßá:
_post = decodedPost.map((e) => PostModel.fromJson(e)).toList();


‡¶è‡¶∞ ‡¶ï‡¶æ‡¶ú ‡¶π‡¶≤‡ßã:
JSON ‡¶è‡¶∞ list of map ‚Üí Dart ‡¶è‡¶∞ list of PostModel ‡¶è convert ‡¶ï‡¶∞‡¶æ
       */
      notifyListeners();

    }else{
      print('Error');
      throw Exception('Failed to load post');
    }

  }
}